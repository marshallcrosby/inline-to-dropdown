{"version":3,"names":[],"mappings":"","sources":["inline-to-dropdown.js"],"sourcesContent":["(function() {\n    const inlineToDropdownEl = document.querySelectorAll('.inline-to-dropdown');\n\n    if (inlineToDropdownEl.length) {\n        let container;\n        let dropdown;\n        let dropdownChildren;\n        let dropdownChildItem;\n        let lastDropdownChildItem;\n\n        inlineToDropdownEl.forEach(item => {\n            reflowItems(item);\n            item.classList.add('js-inline-to-dropdown--loaded')\n        });\n\n        const windowElement = document.documentElement;\n        let windowWidth = window.innerWidth;\n        window.addEventListener('resize', () => {\n            let newWindowWidth = window.innerWidth;\n            if (windowWidth !== newWindowWidth) {\n                windowElement.classList.add('js-window-resizing');\n            }\n            windowWidth = newWindowWidth;\n        });\n\n        window.addEventListener('resize', debounce(() => {\n            inlineToDropdownEl.forEach(item => {\n                reflowItems(item);\n            });\n            windowElement.classList.remove('js-window-resizing');\n        }));\n        \n        function reflowItems(el) {\n            el.classList.add('js-dropdown-has-children');\n            container = el.querySelector('.inline-to-dropdown__group');\n            dropdown = el.querySelector('.inline-to-dropdown__menu');\n            dropdownChildren = dropdown.querySelectorAll('.inline-to-dropdown__item');\n\n            dropdownChildren.forEach((item) => {\n                container.appendChild(item);\n            });\n            \n            while (isOverflown(container) === true) {\n                dropdownChildItem = container.querySelectorAll('.inline-to-dropdown__item');\n                lastDropdownChildItem = dropdownChildItem[dropdownChildItem.length - 1];\n                dropdown.prepend(lastDropdownChildItem);\n            }\n\n            if (dropdown.children.length > 0) {\n                el.classList.add('js-dropdown-has-children');\n            } else {\n                el.classList.remove('js-dropdown-has-children');\n            }\n        }\n\n        function isOverflown(element) {\n            return element.scrollWidth > element.clientWidth;\n        }\n\n        function debounce(func) {\n            let timer;\n\n            return function(event){\n                if (timer) clearTimeout(timer);\n                timer = setTimeout(func, 100, event);\n            };\n        }\n    }\n}());"],"file":"inline-to-dropdown.js"}