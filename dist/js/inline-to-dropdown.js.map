{"version":3,"names":[],"mappings":"","sources":["inline-to-dropdown.js"],"sourcesContent":["/*!\n    * Inline to dropdown v2.0.0\n    * Automatically add/remove overflown inline items into a dropdown.\n    *\n    * Copyright 2024 Marshall Crosby\n    * https://marshallcrosby.com\n*/\n\n(function() {\n    const inlineToDropdownEl = document.querySelectorAll('.inline-to-dropdown');\n\n    if (inlineToDropdownEl.length) {\n        inlineToDropdownEl.forEach(item => {\n            reflowItems(item);\n            item.classList.add('js-inline-to-dropdown--loaded')\n        });\n\n        const windowElement = document.documentElement;\n        let windowWidth = window.innerWidth;\n        \n        window.addEventListener('resize', () => {\n            let newWindowWidth = window.innerWidth;\n            if (windowWidth !== newWindowWidth) {\n                windowElement.classList.add('js-window-resizing');\n            }\n            windowWidth = newWindowWidth;\n        });\n        \n        let windowWidthDebounce = window.innerWidth;\n        window.addEventListener('resize', itdDebounce(() => {\n            let newWindowWidthDebounce = window.innerWidth;\n            if (windowWidthDebounce !== newWindowWidthDebounce) {\n                inlineToDropdownEl.forEach(item => {\n                    reflowItems(item);\n                });\n                windowElement.classList.remove('js-window-resizing');\n            }\n            windowWidthDebounce = newWindowWidthDebounce;\n        }));\n        \n        function reflowItems(el) {\n            const container = el.querySelector('.inline-to-dropdown__group');\n            const dropdown = el.querySelector('.inline-to-dropdown__menu');\n            const dropdownChildren = dropdown.querySelectorAll('.inline-to-dropdown__item');\n\n            for (const item of dropdownChildren) {\n                container.appendChild(item);\n            }\n            \n            while (isOverflown(container) === true) {\n                const dropdownChildItem = container.querySelectorAll('.inline-to-dropdown__item');\n                const lastDropdownChildItem = dropdownChildItem[dropdownChildItem.length - 1];\n                dropdown.prepend(lastDropdownChildItem);\n            }\n        }\n\n        function isOverflown(element) {\n            return Math.floor(element.scrollWidth) > Math.floor(element.clientWidth);\n        }\n\n        function itdDebounce(func) {\n            let timer;\n            return function(event) {\n                if (timer) clearTimeout(timer);\n                timer = setTimeout(func, 200, event);\n            };\n        }\n    }\n}());"],"file":"inline-to-dropdown.js"}